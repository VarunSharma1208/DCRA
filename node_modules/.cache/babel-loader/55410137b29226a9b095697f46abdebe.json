{"ast":null,"code":"var _jsxFileName = \"/Users/dummy/Downloads/openlayers-react-map-master/src/App.js\";\nimport React, { useState } from \"react\";\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { osm, vector, wms } from \"./Source\";\nimport { fromLonLat, get } from \"ol/proj\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport { Controls, FullScreenControl } from \"./Controls\";\nimport FeatureStyles from \"./Features/Styles\";\nimport Background from './assets/Ellipse_Head@3x.png';\nimport mapConfig from \"./config.json\";\nimport Drawer from '@mui/material/Drawer';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\nimport \"./App.css\";\nconst geojsonObject = mapConfig.geojsonObject;\nconst geojsonObject2 = mapConfig.geojsonObject2;\nconst markersLonLat = [mapConfig.kansasCityLonLat, mapConfig.blueSpringsLonLat];\n\nfunction addMarkers(lonLatArray) {\n  var iconStyle = new Style({\n    image: new Icon({\n      anchorXUnits: \"fraction\",\n      anchorYUnits: \"pixels\",\n      src: mapConfig.markerImage32\n    })\n  });\n  let features = lonLatArray.map(item => {\n    let feature = new Feature({\n      geometry: new Point(fromLonLat(item))\n    });\n    feature.setStyle(iconStyle);\n    return feature;\n  });\n  return features;\n}\n\nconst App = () => {\n  const [center, setCenter] = useState([20.5937, 78.9629]);\n  const [zoom, setZoom] = useState(3);\n  const [showLayer1, setShowLayer1] = useState(true);\n  const [showLayer2, setShowLayer2] = useState(true);\n  const [showMarker, setShowMarker] = useState(false);\n  const [show, setShow] = useState(false);\n  const [features, setFeatures] = useState(addMarkers(markersLonLat));\n\n  const toggleDrawer = e => {\n    setShow(true);\n  };\n\n  const toggleDrawer1 = e => {\n    setShow(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 60,\n      width: '100%',\n      background: '#3877F1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 60,\n      width: '100%',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      backgroundImage: `url(${Background})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 60,\n      width: 60,\n      position: 'absolute',\n      right: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: 25,\n      height: 25\n    },\n    src: require('./assets/Vector1.png'),\n    onClick: e => toggleDrawer(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Map, {\n    center: fromLonLat(center),\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Layers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    source: osm(),\n    zIndex: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), showLayer2 && /*#__PURE__*/React.createElement(TileLayer, {\n    source: wms({\n      url: 'http://webdcra.ncrmp.gov.in:8080/geoserver/geonode/wms',\n      params: {\n        'layers': 'PowerPlant'\n      },\n      serverType: 'geoserver',\n      transition: 0\n    }),\n    zIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/dummy/Downloads/openlayers-react-map-master/src/App.js"],"names":["React","useState","Map","Layers","TileLayer","VectorLayer","Style","Icon","Feature","Point","osm","vector","wms","fromLonLat","get","GeoJSON","Controls","FullScreenControl","FeatureStyles","Background","mapConfig","Drawer","Checkbox","Paper","geojsonObject","geojsonObject2","markersLonLat","kansasCityLonLat","blueSpringsLonLat","addMarkers","lonLatArray","iconStyle","image","anchorXUnits","anchorYUnits","src","markerImage32","features","map","item","feature","geometry","setStyle","App","center","setCenter","zoom","setZoom","showLayer1","setShowLayer1","showLayer2","setShowLayer2","showMarker","setShowMarker","show","setShow","setFeatures","toggleDrawer","e","toggleDrawer1","flex","height","width","background","backgroundRepeat","backgroundSize","backgroundImage","position","right","display","justifyContent","alignItems","require","url","params","serverType","transition"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Map from \"./Map\";\nimport { Layers, TileLayer, VectorLayer } from \"./Layers\";\nimport { Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { osm, vector, wms } from \"./Source\";\nimport { fromLonLat, get } from \"ol/proj\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport { Controls, FullScreenControl } from \"./Controls\";\nimport FeatureStyles from \"./Features/Styles\";\nimport Background from './assets/Ellipse_Head@3x.png';\nimport mapConfig from \"./config.json\";\nimport Drawer from '@mui/material/Drawer';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\nimport \"./App.css\";\n\nconst geojsonObject = mapConfig.geojsonObject;\nconst geojsonObject2 = mapConfig.geojsonObject2;\nconst markersLonLat = [mapConfig.kansasCityLonLat, mapConfig.blueSpringsLonLat];\n\nfunction addMarkers(lonLatArray) {\n  var iconStyle = new Style({\n    image: new Icon({\n      anchorXUnits: \"fraction\",\n      anchorYUnits: \"pixels\",\n      src: mapConfig.markerImage32,\n    }),\n  });\n  let features = lonLatArray.map((item) => {\n    let feature = new Feature({\n      geometry: new Point(fromLonLat(item)),\n    });\n    feature.setStyle(iconStyle);\n    return feature;\n  });\n  return features;\n}\n\nconst App = () => {\n  const [center, setCenter] = useState([20.5937, 78.9629]);\n  const [zoom, setZoom] = useState(3);\n\n  const [showLayer1, setShowLayer1] = useState(true);\n  const [showLayer2, setShowLayer2] = useState(true);\n  const [showMarker, setShowMarker] = useState(false);\n  const [show, setShow] = useState(false)\n  const [features, setFeatures] = useState(addMarkers(markersLonLat));\n  const toggleDrawer = (e) => {\n    setShow(true)\n  }\n  const toggleDrawer1 = (e) => {\n    setShow(false)\n  }\n  return (\n    <div style={{flex:1}}>\n       <div style={{ height: 60, width: '100%', background: '#3877F1' }}>\n        <div style={{ height: 60, width: '100%', backgroundRepeat: 'no-repeat', backgroundSize:'cover' , backgroundImage: `url(${Background})` }}>\n          <div style={{ height: 60, width: 60, position: 'absolute', right: 0, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\n            <img style={{ width: 25, height: 25 }} src={require('./assets/Vector1.png')}\n              onClick={(e) => toggleDrawer()} />\n          </div>\n        </div>\n      </div>\n      <Map center={fromLonLat(center)} zoom={zoom}>\n        <Layers>\n          <TileLayer source={osm()} zIndex={0} />\n         \n         \n          {showLayer2 && (\n            <TileLayer source={wms({\n              url: 'http://webdcra.ncrmp.gov.in:8080/geoserver/geonode/wms',\n              params: { 'layers': 'PowerPlant' },\n              serverType: 'geoserver',\n              transition: 0,\n            })} zIndex={1} />\n          )}\n          {/* {showMarker && <VectorLayer source={vector({ features })} />} */}\n        </Layers>\n        \n      </Map>\n      {/* <div>\n        <input\n          type=\"checkbox\"\n          checked={showLayer1}\n          onChange={(event) => setShowLayer1(event.target.checked)}\n        />{\" \"}\n        Johnson County\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={showLayer2}\n          onChange={(event) => setShowLayer2(event.target.checked)}\n        />{\" \"}\n        Wyandotte County\n      </div>\n      <hr />\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={showMarker}\n          onChange={(event) => setShowMarker(event.target.checked)}\n        />{\" \"}\n        Show markers\n      </div> */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}